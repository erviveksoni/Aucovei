<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="aucovei.uwp.ManualMode"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:data="using:aucovei.uwp.Model"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="ImageTextListTemplate" x:DataType="data:Waypoint">
            <StackPanel Orientation="Horizontal" Width="500" Height="100">
                <Grid>
                    <Image Height="80" Width="80" Margin="0,8,0,8" Source="{Binding ImageSourceUri}" Stretch="UniformToFill"/>
                    <TextBlock FontSize="38" FontWeight="Bold" 
                               HorizontalAlignment="Center" Text="{x:Bind Index}" VerticalAlignment="Center" />
                </Grid>
                <StackPanel VerticalAlignment="Center" Width="380" Margin="8,8,0,0">
                    <TextBlock Text="{x:Bind DisplayName}" Style="{StaticResource BaseTextBlockStyle}" />
                    <TextBlock Text="{x:Bind LatLonString}" TextWrapping="WrapWholeWords" Style="{StaticResource CaptionTextBlockStyle}" />
                    <TextBlock Text="{x:Bind DistanceToPreviousWayPoint}" TextWrapping="WrapWholeWords" Margin="0,8,0,0" Style="{StaticResource CaptionTextBlockStyle}"/>
                </StackPanel>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="wideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="myMap.Height" Value="600"/>
                        <Setter Target="myMap.Width" Value="1024"/>
                        <Setter Target="description.Margin" Value="0,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="narrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="myMap.Height" Value="280"/>
                        <Setter Target="myMap.Width" Value="280"/>
                        <Setter Target="description.Margin" Value="28,0,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid  Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10" Grid.Row="0">
                <TextBlock x:Name="description" Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap" x:Name="subdescription">
                Review and send waypoints to Smart Car.
                </TextBlock>
            </StackPanel>
            <Grid Grid.Row="1" x:Name="ContainerGrid">
                <Grid.Background>
                    <ImageBrush Stretch="None" ImageSource="Assets/movie.png"/>
                </Grid.Background>
                <StackPanel  VerticalAlignment="Bottom">
                    <Grid VerticalAlignment="Bottom" Margin="0,30,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="0,0,0,50">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="CamUp" Grid.Row="0" Grid.Column="1" Margin="0,0,0,20" Holding="CameraButtonHoldingEvent">
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px"  RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="270"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                            <Button x:Name="CamDown"  Grid.Row="2" Grid.Column="1" Margin="0,20,0,0" Holding="CameraButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="90"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                            <Button x:Name="CamCenter" Grid.Row="1" Grid.Column="1" Margin="0,0,0,0" Click="CameraButtonClick"  Holding="CameraButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/center.png" Width="60px" RenderTransformOrigin="0.5,0.5">
                                </Image>
                            </Button>
                            <Button x:Name="CamLeft" Grid.Row="1" Grid.Column="0" Margin="90,0,0,0" Holding="CameraButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="180"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                            <Button x:Name="CamRight" Grid.Row="1" Grid.Column="2" Margin="0,0,0,0" Holding="CameraButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                        </Grid>
                        <Grid Grid.Column="2" Margin="0,0,0,50">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="Forward" Grid.Row="0" Grid.Column="1" Margin="0,0,0,20" Holding="DriveButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="270"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                            <Button x:Name="Reverse" Grid.Row="2" Grid.Column="1" Margin="0,20,0,0"  Holding="DriveButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="90"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                            <Button x:Name="Stop" Grid.Row="1" Grid.Column="1"  Holding="DriveButtonHoldingEvent" Click="DriveButtonOnClick" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/stop.png" Width="60px"/>
                            </Button>
                            <Button x:Name="Left" Grid.Row="1" Grid.Column="0" Margin="90,0,0,0"  Holding="DriveButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="180"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                            <Button x:Name="Right" Grid.Row="1" Grid.Column="2" Margin="0,0,80,0" Holding="DriveButtonHoldingEvent" >
                                <Button.Background>
                                    <SolidColorBrush Opacity="0"></SolidColorBrush>
                                </Button.Background>
                                <Image Source="Assets/arrow.png" Width="60px"  RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Button>
                        </Grid>
                    </Grid>
                </StackPanel>
            </Grid>
            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>
</Page>
